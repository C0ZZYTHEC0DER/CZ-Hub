-- Instances:

local ScreenGui = Instance.new("ScreenGui")
local TextButton = Instance.new("TextButton")
ScreenGui.ResetOnSpawn = false

-- Properties:

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

TextButton.Parent = ScreenGui
TextButton.BackgroundColor3 = Color3.fromRGB(72, 66, 72)
TextButton.BorderColor3 = Color3.fromRGB(255, 1, 5)
TextButton.BorderSizePixel = 0
TextButton.Position = UDim2.new(0.699333847, 0, 0.93507719, 0)
TextButton.Size = UDim2.new(0, 200, 0, 24)
TextButton.Font = Enum.Font.SourceSans
TextButton.Text = "C\\Z HUB"
TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextSize = 14.000
TextButton.MouseButton1Down:Connect(function()
	game:GetService("VirtualInputManager"):SendKeyEvent(true, "P", false, game)
end)

-- Scripts:

local function DHYE_fake_script() -- TextButton.LocalScript
	local script = Instance.new('LocalScript', TextButton)

	local speed = 5
	local button = script.Parent
	
	while true do
		for i = 255, 0, -speed do
			task.wait()
			button.BackgroundColor3 = Color3.fromRGB(255, 0, i)
		end
		for i = 0, 255, speed do
			task.wait()
			button.BackgroundColor3 = Color3.fromRGB(255, i, 0)
		end
	
		for i = 255, 0, -speed do
			task.wait()
			button.BackgroundColor3 = Color3.fromRGB(i, 255, 0)
		end
	
		for i = 0, 255, speed do
			task.wait()
			button.BackgroundColor3 = Color3.fromRGB(0, 255, i)
		end
	
		for i = 255, 0, -speed do
			task.wait()
			button.BackgroundColor3 = Color3.fromRGB(0, i, 255)
		end
	
		for i = 0, 255, speed do
			task.wait()
			button.BackgroundColor3 = Color3.fromRGB(i, 0, 255)
		end
	
		for i = 255, 0, -speed do
			task.wait()
			button.BackgroundColor3 = Color3.fromRGB(255, 0, i)
		end
	end
	
end
coroutine.wrap(DHYE_fake_script)()
--<>--<>--<>--<>--<>--
-- The UI
local Library = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/Drifter0507/Shamrock/main/MainLibrary", true))()

local Window = Library:CreateWindow({ Title = "C\\Z HUB" })
local Tab1 = Window:CreateTab({ Title = "Main", ScrollBarEnabled = false })

-- Local Player Section
local LocalPSection = Tab1:CreateSection({
	Title = "Local Player"
})
-- FE/Server-sided Section
local FEs = Tab1:CreateSection({
	Title = "FE/Server-Sided"
})

-- Create Click TP Tool button
LocalPSection:CreateButton({
	Title = "Click TP Tool",
	Callback = function()
		-- Create Click TP Tool
		local plr = game.Players.LocalPlayer
		local ClickTP = Instance.new("Tool")
		local handle = Instance.new("Part")
		local WcO = Instance.new("WeldConstraint")

		ClickTP.Name = "Click TP"
		handle.Name = "Handle"
handle.Transparency = 1
		handle.Parent = ClickTP
		WcO.Parent = handle

		ClickTP.Parent = plr.Backpack

		-- Create functionality for Click TP Tool
		ClickTP.Equipped:Connect(function(mouse)
			mouse.Button1Down:Connect(function()
				plr.Character.HumanoidRootPart.CFrame = CFrame.new(mouse.Hit.p)
			end)
		end)

		local clone = ClickTP:Clone()
		clone.Parent = plr.StarterGear
	end
})
--<>--<>--<>--<>--<>--
local nameState = false
local localPlayer = game.Players.LocalPlayer
local CurrentCamera = workspace.CurrentCamera
local camera = game:GetService("Workspace").CurrentCamera
local HeadOff = Vector3.new(0,1,0) --the 1 here is the height of the name esp
local worldToViewportPoint = CurrentCamera.worldToViewportPoint

function esp_function(v)
    local text = Drawing.new("Text")
    text.Visible = false
    text.Center = true
    text.Outline = true
    text.Font = 2
    text.Color = Color3.new(1,1,1)
    text.Size = 13
    game:GetService("RunService").RenderStepped:Connect(function()
        if v.Character ~= nil and v.Character:FindFirstChild("Humanoid") and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v ~= localPlayer and v.Character.Humanoid.Health > 0 then

            local Head = v.Character.Head
            local Vector, onScreen = camera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
            local HeadPosition = worldToViewportPoint(CurrentCamera, Head.Position + HeadOff)
            if onScreen then
                text.Position = Vector2.new(HeadPosition.X, HeadPosition.Y)
                text.Text = v.DisplayName
                text.Visible = nameState
            else
                text.Visible = false
            end
        else
            text.Visible = false
        end

    end)
end

for i, v in pairs(game.Players:GetChildren()) do
    coroutine.wrap(esp_function)(v)
end

game.Players.PlayerAdded:Connect(function()
    coroutine.wrap(esp_function)(v)
end)
--<>--<>--<>--<>--<>--
FEs:CreateToggle({
	Title = "ESP",
    Default = false,
	Callback = function(state)
        nameState = state
        if state then
		local Players = game:GetService("Players"):GetChildren()
		local RunService = game:GetService("RunService")
		local highlight = Instance.new("Highlight")
		highlight.Name = "Highlight"

		for i, v in pairs(Players) do
			repeat
				wait()
			until v.Character
			if not v.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild("Highlight") then
				local highlightClone = highlight:Clone()
				highlightClone.Adornee = v.Character
				highlightClone.Parent = v.Character:FindFirstChild("HumanoidRootPart")
				highlightClone.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
				highlightClone.Name = "Highlight"
			end
		end

		game.Players.PlayerAdded:Connect(function(player)
			repeat
				wait()
			until player.Character
			if not player.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild("Highlight") then
				local highlightClone = highlight:Clone()
				highlightClone.Adornee = player.Character
				highlightClone.Parent = player.Character:FindFirstChild("HumanoidRootPart")
				highlightClone.Name = "Highlight"
			end
		end)

		game.Players.PlayerRemoving:Connect(function(playerRemoved)
			playerRemoved.Character:FindFirstChild("HumanoidRootPart").Highlight:Destroy()
		end)

		RunService.Heartbeat:Connect(function()
			for i, v in pairs(Players) do
				repeat
					wait()
				until v.Character
				if not v.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild("Highlight") then
					local highlightClone = highlight:Clone()
					highlightClone.Adornee = v.Character
					highlightClone.Parent = v.Character:FindFirstChild("HumanoidRootPart")
					highlightClone.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
					highlightClone.Name = "Highlight"
					task.wait()
				end
			end
		end)
        else
            Players.Character:FindFirstChild("HumanoidRootPart").Highlight:Destroy()
        end
	end
})
--<>--<>--<>--<>--<>--
LocalPSection:CreateToggle({
	Title = "Fly",
	Default = false,
	Callback = function(state)
		speeds = 1 
 
        local speaker = game:GetService("Players").LocalPlayer 
 
        local chr = game.Players.LocalPlayer.Character
        local hum = chr and chr:FindFirstChildWhichIsA("Humanoid") 
 
        nowe = false
		if state then
			nowe = true
			for i = 1, speeds do
				spawn(function()
					local hb = game:GetService("RunService").Heartbeat
					tpwalking = true
					local chr = game.Players.LocalPlayer.Character
					local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
					while tpwalking and hb:Wait() and chr and hum and hum.Parent do
						if hum.MoveDirection.Magnitude > 0 then
							chr:TranslateBy(hum.MoveDirection)
						end
					end		 
				end)
			end
			game.Players.LocalPlayer.Character.Animate.Disabled = true
			local Char = game.Players.LocalPlayer.Character
			local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")
	
			for i,v in next, Hum:GetPlayingAnimationTracks() do v:AdjustSpeed(0) end

			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,false)
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,false)
			speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
        else
			nowe = false
			speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,true)
            speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,true)
            speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,true)
            speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,true)
            speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,true)
            speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,true)
            speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,true)
            speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,true)
            speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,true)
            speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,true)
            speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,true)
            speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,true)
            speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,true)
            speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,true)
            speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,true)
            speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.RunningNoPhysics)
        end
		if game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid").RigType == Enum.HumanoidRigType.R6 then
			local plr = game.Players.LocalPlayer
			local torso = plr.Character.Torso
			local flying = true
			local deb = true
			local ctrl = {f = 0, b = 0, l = 0, r = 0}
			local lastctrl = {f = 0, b = 0, l = 0, r = 0}
			local maxspeed = 50
			local speed = 0
			local bg = Instance.new("BodyGyro", torso)
			bg.P = 9e4
			bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
			bg.cframe = torso.CFrame
			local bv = Instance.new("BodyVelocity", torso)
			bv.velocity = Vector3.new(0,0.1,0)
			bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
			if nowe == true then
				plr.Character.Humanoid.PlatformStand = true
			end
			while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do
				game:GetService("RunService").RenderStepped:Wait() 
				 
				if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
				    speed = speed+.5+(speed/maxspeed)
				    if speed > maxspeed then
				        speed = maxspeed
			        end
				elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
					speed = speed-1
					if speed < 0 then
					    speed = 0
				    end
				end
				if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
					bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
					lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
				elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
					bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
				else
					bv.velocity = Vector3.new(0,0,0)
				end
				bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
            end
			ctrl = {f = 0, b = 0, l = 0, r = 0}
			lastctrl = {f = 0, b = 0, l = 0, r = 0}
			speed = 0
			bg:Destroy()
			bv:Destroy()
			plr.Character.Humanoid.PlatformStand = false
			game.Players.LocalPlayer.Character.Animate.Disabled = false
			tpwalking = false
		else
			local plr = game.Players.LocalPlayer
			local UpperTorso = plr.Character.UpperTorso
			local flying = true
			local deb = true
			local ctrl = {f = 0, b = 0, l = 0, r = 0}
			local lastctrl = {f = 0, b = 0, l = 0, r = 0}
			local maxspeed = 50
			local speed = 0
			local bg = Instance.new("BodyGyro", UpperTorso)
			bg.P = 9e4
			bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
			bg.cframe = UpperTorso.CFrame
			local bv = Instance.new("BodyVelocity", UpperTorso)
			bv.velocity = Vector3.new(0,0.1,0)
			bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
			if nowe == true then
				plr.Character.Humanoid.PlatformStand = true
			end
			while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do
				wait()
				if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
					speed = speed+.5+(speed/maxspeed)
					if speed > maxspeed then
					speed = maxspeed
					end
				elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
					speed = speed-1
					if speed < 0 then
					speed = 0
					end
				end
				if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
					bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
					lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
				elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
					bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
				else
					bv.velocity = Vector3.new(0,0,0)
				end
				bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
            end
			ctrl = {f = 0, b = 0, l = 0, r = 0}
			lastctrl = {f = 0, b = 0, l = 0, r = 0}
			speed = 0
			bg:Destroy()
			bv:Destroy()
			plr.Character.Humanoid.PlatformStand = false
			game.Players.LocalPlayer.Character.Animate.Disabled = false
			tpwalking = false
		end
	end})

	
game:GetService("StarterGui"):SetCore("SendNotification", { 
	Title = "C\Z HUB";
	Text = "By C0ZYD3V and CoconutZ";
	Icon = "rbxthumb://type=Asset&id=14016738059&w=150&h=150"})
	Duration = 3; 
